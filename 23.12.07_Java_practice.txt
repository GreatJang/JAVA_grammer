23.12.07 자바 기초

⭐데이터 초기값
- 클래스의 멤버변수 즉, static변수와 객체 변수 일 경우
    - int, String 등의 자료형들이 초기화됨
    - 기본형변수는 기본형의 타입에 맞게 초기화(ex - int 0, boolean false)
    - 참조형 데이터(ex - String)은 null로 초기화

⭐참조 자료형
- Java에서 기본(원시) 자료형을 제외한 자료형은 "참조 자료형"이라고 한다.
    - 원시 자료형은 Java에서 제공하는 기본 데이터 타입
    - int, long, double, float, boolean, char
- 대표적인 참조 자료형은 String, Lust, Set, Map, 배열등
    - 참조자료형은 클래스 이고 객체이다.
- wrapper 클래스

⭐원시 타입(primitive)과 참조타입의 차이
- 원시 자료형 변수는 new 키워드 없이 리터럴(literal)로만 값을 세팅
    - 참조형 변수는 new 키워드를 사용하여 값 세팅
    - String은 리터럴 표현식을 사용할 수 있도록 자바에서 특별 대우 해주는 참조자료형
        - 그외에도 배열, wrapper클래스도 리터럴 세팅 가능(자동 형변환)
- 원시 자료형의 비교시에는 값 자체를 비교
    - 참조형 변수는 객체주소를 비교함으로서 동일한 객체인지를 비교

== : 원시자료형
String a = "hello";
String b = "hello";
a == b => 예외
a.equal(b) => a위치로 가서 hello 값 가져옴, b위치로 가서 hello 값 가져와서 a, b의 값 비교

Wrapper클래스
- 원시자료형의 Wrapper 클래스
    - 클래스에서 정의한 다양한 기능들을 추가적으로 사용하기 위해 원시 자료형을 Wrapping한 클래스가 나오게 되었다.
    - 사용예시
        - Integer.toString(), Integer.parseInt()등


⭐자료형 - String
- 문자열 자료형
- 사용방법
    - 리터럴 방식
        - String a = "Happy Java";
    - 객체 사용 방식
        - String a = new String("Happy Java");
- 객체 사용방식과 리터럴 방식의 메모리저장 차이
    - 객체사용방식은 힙메모리에 데이터 저장
    - 리터럴 방식의 경우 문자열 상수풀이라는 특별한 공간에 저장
- 리터럴 방식을 사용하는 것이 최적화에 도움
- String 객체 비교시 .equals 사용하기

- equals
    - ture / false 리턴
    -


